<syntax:syntax uri="werkflow:basic"
               xmlns:j="jelly:core"
               xmlns:syntax="werkflow:syntax"
               xmlns:fund="werkflow:fundamental"
               xmlns:core="werkflow:core-idioms">

    <syntax:import url="../common/core-idioms.xml"/>

    <syntax:tag name="processes">
        <syntax:invokeBody/>
    </syntax:tag>

    <syntax:tag name="import">
        <fund:import url="${url}"/>
    </syntax:tag>

    <syntax:tag name="process">
        <syntax:expr-factory type="com.werken.werkflow.semantics.python.PythonExpressionFactory"/>
       <j:if test="${empty(package)}">
         <j:set var="package" value=""/>
       </j:if>
        <fund:process package="${package}"
                      id="${id}"
                      initiation="${initiation}">
            <syntax:invokeBody/>
        </fund:process> 
    </syntax:tag>

    <syntax:tag name="call">
        <j:if test="${empty(packageAttr)}">
            <j:set var="packageAttr" value=""/>
        </j:if>
        <fund:call package="${packageAttr}"
                   process="${processAttr}">
            <syntax:invokeBody/>
        </fund:call>
    </syntax:tag>

    <syntax:tag name="in">
        <fund:in id="${idAttr}" value="${valueAttr}"/>
    </syntax:tag>

    <syntax:tag name="empty">
        <core:empty/>
    </syntax:tag>

    <syntax:tag name="terminate">
        <core:terminate>
            <invokeBody/>
        </core:terminate>
    </syntax:tag>

    <syntax:tag name="if">
        <core:if condition="${condition}">
            <syntax:invokeBody/>
        </core:if>
    </syntax:tag>

    <syntax:tag name="switch">
        <core:choose>
            <syntax:invokeBody/>
        </core:choose>
    </syntax:tag>

    <syntax:tag name="case">
        <core:expr-choice condition="${condition}">
            <syntax:invokeBody/>
        </core:expr-choice>
    </syntax:tag>

    <syntax:tag name="receive">
        <syntax:action-receptor var="action">
            <syntax:correlator-receptor var="correlator" bind="${bind}">
                <syntax:invokeBody/>
            </syntax:correlator-receptor>
        </syntax:action-receptor>
        <core:receive type="${type}" 
                      correlator="${correlator}"
                      action="${action}"
                      bind="${bind}"/>
    </syntax:tag>

    <syntax:tag name="otherwise">
        <core:choice>
            <syntax:invokeBody/>
        </core:choice>
    </syntax:tag>

    <syntax:tag name="pick">
        <core:choose>
            <syntax:invokeBody/>
        </core:choose>
    </syntax:tag>

    <syntax:tag name="choice">
        <syntax:invokeBody/>
    </syntax:tag>

    <syntax:tag name="while">
        <core:while condition="${condition}">
            <syntax:invokeBody/>
        </core:while>
    </syntax:tag>

    <syntax:tag name="parallel">
        <core:parallel>
            <syntax:invokeBody/>
        </core:parallel>
    </syntax:tag>

    <syntax:tag name="sequence">
        <core:sequence>
            <syntax:invokeBody/>
        </core:sequence>
    </syntax:tag>

    <syntax:tag name="message-types">
        <fund:message-types>
            <syntax:invokeBody/>
        </fund:message-types>
    </syntax:tag>

    <syntax:tag name="message-type">
        <fund:message-type id="${id}">
            <syntax:invokeBody/>
        </fund:message-type>
    </syntax:tag>

    <syntax:tag name="actions">
        <fund:actions>
            <syntax:invokeBody/>
        </fund:actions>
    </syntax:tag>

    <syntax:tag name="action-definition">
        <fund:action-definition id="${id}">
            <syntax:invokeBody/>
        </fund:action-definition>
    </syntax:tag>

    <syntax:tag name="action">
        <fund:action id="${id}">
            <syntax:invokeBody/>
        </fund:action>
    </syntax:tag>

    <syntax:tag name="import">
        <fund:import url="${url}"/>
    </syntax:tag>

    <syntax:tag name="attributes">
        <fund:attributes>
            <syntax:invokeBody/>
        </fund:attributes>
    </syntax:tag>

    <syntax:tag name="attribute">
       <j:if test="${empty(outAttr)}">
         <j:set var="outAttr" value="false"/>
       </j:if>
       <j:if test="${empty(inAttr)}">
         <j:set var="inAttr" value="false"/>
       </j:if>
        <fund:attribute id="${idAttr}" in="${inAttr}" out="${outAttr}">
            <syntax:invokeBody/>
        </fund:attribute>
    </syntax:tag>

    <syntax:tag name="call">
        <fund:call>
            <syntax:invokeBody/>
        </fund:call>
    </syntax:tag>

    <syntax:tag name="in">
        <fund:in id="${id}" value="${value}">
            <syntax:invokeBody/>
        </fund:in>
    </syntax:tag>

</syntax:syntax>
